definitions:
  entity.User:
    properties:
      creation_timestamp:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      update_timestamp:
        type: string
      username:
        type: string
    type: object
  request.CreateUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - name
    - password
    - username
    type: object
  request.UpdateUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
info:
  contact: {}
  description: This is the Vision Backend API.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Vision Backend API
  version: v0.1.0
paths:
  /api/v1/users:
    get:
      description: List all users
      operationId: listUser
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "429":
          description: Too Many Requests
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - BasicAuth: []
      summary: List users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create a new user
      operationId: createUser
      parameters:
      - description: Created user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "429":
          description: Too Many Requests
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - BasicAuth: []
      summary: Create user
      tags:
      - user
  /api/v1/users/{id}:
    delete:
      description: Delete specified user by ID
      operationId: deleteUser
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "429":
          description: Too Many Requests
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - BasicAuth: []
      summary: Delete user
      tags:
      - user
    get:
      description: Get user information by user ID
      operationId: getUser
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "429":
          description: Too Many Requests
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - BasicAuth: []
      summary: Get user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update the specified user
      operationId: updateUser
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "429":
          description: Too Many Requests
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - BasicAuth: []
      summary: Update user
      tags:
      - user
securityDefinitions:
  APIKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
